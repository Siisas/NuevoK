'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Admin_cham")>  _
Partial Public Class Sample1DataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertRRHHGestionTicket(instance As RRHHGestionTicket)
    End Sub
  Partial Private Sub UpdateRRHHGestionTicket(instance As RRHHGestionTicket)
    End Sub
  Partial Private Sub DeleteRRHHGestionTicket(instance As RRHHGestionTicket)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("Admin_chamConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property RRHHGestionTicket() As System.Data.Linq.Table(Of RRHHGestionTicket)
		Get
			Return Me.GetTable(Of RRHHGestionTicket)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RRHHGestionTicket")>  _
Partial Public Class RRHHGestionTicket
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdGestion As Long
	
	Private _Fk_IdTicket As Long
	
	Private _ObservacionEstado As String
	
	Private _FechaGestion As Date
	
	Private _UsuarioRegistra As String
	
	Private _UsuarioAsignado As String
	
	Private _Fk_idEstado As System.Nullable(Of Long)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdGestionChanging(value As Long)
    End Sub
    Partial Private Sub OnIdGestionChanged()
    End Sub
    Partial Private Sub OnFk_IdTicketChanging(value As Long)
    End Sub
    Partial Private Sub OnFk_IdTicketChanged()
    End Sub
    Partial Private Sub OnObservacionEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionEstadoChanged()
    End Sub
    Partial Private Sub OnFechaGestionChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaGestionChanged()
    End Sub
    Partial Private Sub OnUsuarioRegistraChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioRegistraChanged()
    End Sub
    Partial Private Sub OnUsuarioAsignadoChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioAsignadoChanged()
    End Sub
    Partial Private Sub OnFk_idEstadoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnFk_idEstadoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdGestion", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdGestion() As Long
		Get
			Return Me._IdGestion
		End Get
		Set
			If ((Me._IdGestion = value)  _
						= false) Then
				Me.OnIdGestionChanging(value)
				Me.SendPropertyChanging
				Me._IdGestion = value
				Me.SendPropertyChanged("IdGestion")
				Me.OnIdGestionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fk_IdTicket", DbType:="BigInt NOT NULL")>  _
	Public Property Fk_IdTicket() As Long
		Get
			Return Me._Fk_IdTicket
		End Get
		Set
			If ((Me._Fk_IdTicket = value)  _
						= false) Then
				Me.OnFk_IdTicketChanging(value)
				Me.SendPropertyChanging
				Me._Fk_IdTicket = value
				Me.SendPropertyChanged("Fk_IdTicket")
				Me.OnFk_IdTicketChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ObservacionEstado", DbType:="NVarChar(500) NOT NULL", CanBeNull:=false)>  _
	Public Property ObservacionEstado() As String
		Get
			Return Me._ObservacionEstado
		End Get
		Set
			If (String.Equals(Me._ObservacionEstado, value) = false) Then
				Me.OnObservacionEstadoChanging(value)
				Me.SendPropertyChanging
				Me._ObservacionEstado = value
				Me.SendPropertyChanged("ObservacionEstado")
				Me.OnObservacionEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaGestion", DbType:="DateTime NOT NULL")>  _
	Public Property FechaGestion() As Date
		Get
			Return Me._FechaGestion
		End Get
		Set
			If ((Me._FechaGestion = value)  _
						= false) Then
				Me.OnFechaGestionChanging(value)
				Me.SendPropertyChanging
				Me._FechaGestion = value
				Me.SendPropertyChanged("FechaGestion")
				Me.OnFechaGestionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsuarioRegistra", DbType:="VarChar(70) NOT NULL", CanBeNull:=false)>  _
	Public Property UsuarioRegistra() As String
		Get
			Return Me._UsuarioRegistra
		End Get
		Set
			If (String.Equals(Me._UsuarioRegistra, value) = false) Then
				Me.OnUsuarioRegistraChanging(value)
				Me.SendPropertyChanging
				Me._UsuarioRegistra = value
				Me.SendPropertyChanged("UsuarioRegistra")
				Me.OnUsuarioRegistraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsuarioAsignado", DbType:="VarChar(70) NOT NULL", CanBeNull:=false)>  _
	Public Property UsuarioAsignado() As String
		Get
			Return Me._UsuarioAsignado
		End Get
		Set
			If (String.Equals(Me._UsuarioAsignado, value) = false) Then
				Me.OnUsuarioAsignadoChanging(value)
				Me.SendPropertyChanging
				Me._UsuarioAsignado = value
				Me.SendPropertyChanged("UsuarioAsignado")
				Me.OnUsuarioAsignadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fk_idEstado", DbType:="BigInt")>  _
	Public Property Fk_idEstado() As System.Nullable(Of Long)
		Get
			Return Me._Fk_idEstado
		End Get
		Set
			If (Me._Fk_idEstado.Equals(value) = false) Then
				Me.OnFk_idEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Fk_idEstado = value
				Me.SendPropertyChanged("Fk_idEstado")
				Me.OnFk_idEstadoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
